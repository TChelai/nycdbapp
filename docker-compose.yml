version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgis/postgis:14-3.3
    container_name: nycdb-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nycdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # PostgREST API
  postgrest:
    image: postgrest/postgrest:latest
    container_name: nycdb-postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/nycdb
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_SERVER_PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nycdb-backend
    environment:
      - PORT=5000
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nycdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - POSTGREST_URL=http://postgrest:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - postgrest
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nycdb-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
